AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for creating the VPC and related networking resources for the Podcast Marketing Automation SaaS platform

Parameters:
  ProjectName:
    Type: String
    Description: Name of the project

  Environment:
    Type: String
    Description: Environment (e.g., dev, staging, prod)
    AllowedValues: 
      - dev
      - staging
      - prod

  VpcCidr:
    Type: String
    Description: CIDR block for the VPC
    Default: 10.0.0.0/16

  PublicSubnetCidrs:
    Type: CommaDelimitedList
    Description: Comma-delimited list of CIDR blocks for public subnets

  PrivateSubnetCidrs:
    Type: CommaDelimitedList
    Description: Comma-delimited list of CIDR blocks for private subnets

  AZIndex:
    Type: Number
    Description: Index of the Availability Zone
    MinValue: 0
    MaxValue: 3

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-vpc
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-igw
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [!Ref AZIndex, !Ref PublicSubnetCidrs]
      AvailabilityZone: !Select [!Ref AZIndex, !GetAZs !Ref 'AWS::Region']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-public-subnet-${AZIndex}
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [!Ref AZIndex, !Ref PrivateSubnetCidrs]
      AvailabilityZone: !Select [!Ref AZIndex, !GetAZs !Ref 'AWS::Region']
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-private-subnet-${AZIndex}
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-public-rt
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-private-rt-${AZIndex}
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  NatGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: VPCGatewayAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-eip-${AZIndex}
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-nat-${AZIndex}
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  PrivateRouteToNat:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

Outputs:
  VpcId:
    Description: The ID of the VPC
    Value: !Ref VPC
    Export:
      Name: !Sub ${AWS::StackName}-VpcId

  PublicSubnetId:
    Description: The ID of the public subnet
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnetId

  PrivateSubnetId:
    Description: The ID of the private subnet
    Value: !Ref PrivateSubnet
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnetId

  NatGatewayId:
    Description: The ID of the NAT Gateway
    Value: !Ref NatGateway
    Export:
      Name: !Sub ${AWS::StackName}-NatGatewayId

# Human Tasks:
# - Review and adjust the VPC CIDR block and subnet CIDR blocks to ensure they align with the network design requirements
# - Confirm that the number of public and private subnets matches the high availability and fault tolerance requirements
# - Validate that the NAT Gateway setup meets the scalability and cost optimization needs of the project
# - Ensure that all necessary tags are applied to resources for proper organization and cost allocation
# - Review the outputs to confirm they provide all necessary information for other CloudFormation stacks
# - Consider adding additional security groups or network ACLs if required by the security design
# - Verify that the AZIndex parameter and its usage correctly distribute resources across multiple Availability Zones